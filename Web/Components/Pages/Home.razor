@page "/sample"
@using Week07Road.Logic

<h3><a href="samplepage">View Sample Page</a></h3>

<div>@errorMessage</div>

@if (road == null)
{
    <div>
        <label>Rows:</label>
        <input @bind="rowInput" />
        <label>Columns:</label>
        <input @bind="colInput" />
        <button @onclick="CreateRoad">Create Road</button>
    </div>
}
else
{
    <table border="1" style="border-collapse: collapse; width: 100%;">
        @for (int row = 0; row < road.RowCount; row++)
        {
            <tr>
                @for (int col = 0; col < road.ColCount; col++)
                {
                    <td style="width: 150px; height: 150px; text-align: center;">
                        @if (road.GetVehicle(row, col) != null)
                        {
                            <img src="@road.GetVehicle(row, col)?.GetImagePath()" height="100" />
                        }
                    </td>
                }
            </tr>
        }
    </table>
    
    <div style="margin-top: 20px;">
        <label>Set a @currentVehicleType</label>
        <div>
            <label>row:</label> <input @bind="vehicleRowInput" />
        </div>
        <div>
            <label>column:</label> <input @bind="vehicleColumnInput" />
        </div>
        <div>
            <button @onclick=@(() => SetVehicle("Car"))>Set Car</button>
            <button @onclick=@(() => SetVehicle("Bus"))>Set Bus</button>
            <button @onclick=@(() => SetVehicle("FireTruck"))>Set FireTruck</button>
            <button @onclick=@(() => SetVehicle("Taxi"))>Set Taxi</button>
        </div>
    </div>
}

@code {
    private string rowInput;
    private string colInput;
    private string vehicleRowInput;
    private string vehicleColumnInput;
    private string currentVehicleType = "Car";
    private IRoad road = null;
    private string errorMessage = "";

    private void CreateRoad()
    {
        if (int.TryParse(rowInput, out int rows) && int.TryParse(colInput, out int cols))
        {
            road = new Road(rows, cols);
            errorMessage = "";
        }
        else
        {
            errorMessage = "Please enter valid numbers for rows and columns.";
        }
    }

    private void SetVehicle(string vehicleType)
    {
        currentVehicleType = vehicleType;
        if (int.TryParse(vehicleRowInput, out int row) && int.TryParse(vehicleColumnInput, out int col))
        {
            IVehicle vehicle = vehicleType switch
            {
                "Car" => new Car(),
                "Bus" => new Bus(),
                "FireTruck" => new FireTruck(),
                "Taxi" => new Taxi(),
                _ => null
            };

            road?.SetVehicle(row, col, vehicle);
            errorMessage = "";
        }
        else
        {
            errorMessage = "Please enter valid numbers for vehicle row and column.";
        }
    }
}
